{"version":3,"sources":["components/container/Container.module.css","components/phonebook/Contacts.module.css","components/container/Container.js","redux/phonebook/phonebook-actions.js","components/phonebook/ContactList.js","components/phonebook/ContactForm.js","components/phonebook/Filter.js","components/App.js","redux/phonebook/phonebook-reducer.js","redux/srore.js","index.js"],"names":["module","exports","Container","children","className","s","container","addNewContact","createAction","name","number","payload","id","shortId","generate","deleteContact","changeFilter","ContactList","item","contacts","useSelector","state","filter","items","normolizedFilter","toLowerCase","includes","getVisiblePhonbookList","dispatch","useDispatch","map","type","onClick","phonebookActions","onDeleteContact","ContactForm","props","useState","setName","setNumber","handleChange","e","currentTarget","value","label","input","form","button","buttonActive","length","onSubmit","preventDefault","addSameName","addSameNumber","toast","error","pattern","title","required","onChange","placeholder","disabled","Filter","target","App","autoClose","createReducer","_","phonebookReduser","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","mainStore","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,MAAQ,wBAAwB,MAAQ,wBAAwB,OAAS,yBAAyB,KAAO,yB,uJCK1IC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,wCC0B1BI,EAAgBC,YAAa,iBAAiB,SAACC,EAAMC,GAAP,MAAmB,CAC5EC,QAAS,CACPC,GAAIC,IAAQC,WACZL,OACAC,cAISK,EAAgBP,YAAa,oBAE7BQ,EAAeR,YAAa,0BCY1BS,MArCf,WACE,IAAQC,EAASb,IAATa,KAEFC,EAAWC,aAAY,SAAAC,GAAK,OAXL,SAACC,EAAQC,GACtC,IAAMC,EAAmBF,EAAOG,cAEhC,OAAOF,EAAMD,QAAO,SAAAJ,GAAI,OACtBA,EAAKT,KAAKgB,cAAcC,SAASF,MAQjCG,CAAuBN,EAAMF,SAASG,OAAQD,EAAMF,SAASI,UAEzDK,EAAWC,cAIjB,OACE,6BACGV,EAASW,KAAI,gBAAGlB,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAIN,UAAWc,EAAf,UACE,iCACGT,EADH,KACWC,KAEX,wBAAQqB,KAAK,SAASC,QAAS,kBATf,SAAApB,GAAE,OAAIgB,EAASK,EAA+BrB,IASzBsB,CAAgBtB,IAArD,sBAJwBA,S,QCkEnBuB,MAtFf,SAAqBC,GACnB,MAAwBC,mBAAS,IAAjC,mBAAO5B,EAAP,KAAa6B,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAO3B,EAAP,KAAe6B,EAAf,KACMpB,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASI,SAC/CK,EAAWC,cAEXW,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBjC,EAAR,EAAQA,KAAMkC,EAAd,EAAcA,MAEd,OAAQlC,GACN,IAAK,OACH6B,EAAQK,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,SAsBEC,EAA+BvC,IAA/BuC,MAAOC,EAAwBxC,IAAxBwC,MAAOC,EAAiBzC,IAAjByC,KAAMC,EAAW1C,IAAX0C,OACtBC,EAAevC,EAAKwC,OAAS,GAAKvC,EAAOuC,OAAS,EAExD,OACE,uBAAM7C,UAAW0C,EAAMI,SAtBJ,SAAAT,GACnBA,EAAEU,iBAEF,IAAMC,EAAcjC,EAASW,KAAI,qBAAGrB,QAAiBiB,SAASjB,GACxD4C,EAAgBlC,EAASW,KAAI,qBAAGpB,UAAqBgB,SAAShB,GAEhE0C,EACFE,IAAMC,MAAN,UAAe9C,EAAf,4BACS4C,EACTC,IAAMC,MAAN,UAAe7C,EAAf,4BAEAkB,EAASK,EAA+BxB,EAAMC,IAGhD4B,EAAQ,IACRC,EAAU,KAOV,UACE,wBAAOnC,UAAWwC,EAAlB,iBAEE,uBACExC,UAAWyC,EACXd,KAAK,OACLtB,KAAK,OACL+C,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRf,MAAOlC,EACPkD,SAAUnB,EACVoB,YAAY,SAGhB,wBAAOxD,UAAWwC,EAAlB,mBAEE,uBACExC,UAAWyC,EACXd,KAAK,OACLtB,KAAK,SACL+C,QAAQ,yFACRC,MAAM,6iBACNC,UAAQ,EACRf,MAAOjC,EACPiD,SAAUnB,EACVoB,YAAY,SAGhB,wBAAQxD,UAAW2C,EAAQhB,KAAK,SAAS8B,UAAWb,EAApD,6BC9CSc,MA7Bf,WACE,IAAQlB,EAAiBvC,IAAjBuC,MAAOC,EAAUxC,IAAVwC,MAETF,EAAQvB,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,UAE5CM,EAAWC,cAKjB,OACE,wBAAOzB,UAAWwC,EAAlB,oCAEE,uBACExC,UAAWyC,EACXd,KAAK,OACLY,MAAOA,EACPgB,SAViB,SAAAlB,GAAC,OACtBb,EAASK,EAA8BQ,EAAEsB,OAAOpB,SAU5CiB,YAAY,UCDLI,I,EAAAA,EAff,WACE,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,IAEA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,IAEA,cAAC,IAAD,CAAgBC,UAAW,U,8CCuB3B1C,EAAQ2C,YAAc,IAAD,mBACxBjC,GAAiC,SAACZ,EAAD,OAAUV,EAAV,EAAUA,QAAV,4BAA4BU,GAA5B,CAAmCV,OAD5C,cAExBsB,GAAiC,SAACZ,EAAD,OAAUV,EAAV,EAAUA,QAAV,OAChCU,EAAMC,QAAO,qBAAGV,KAAgBD,QAHT,IAMrBW,EAAS4C,YAAc,GAAD,eACzBjC,GAAgC,SAACkC,EAAD,YAAMxD,YAQ1ByD,EALUC,YAAgB,CACvC9C,QACAD,WCrCIgD,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAK1DC,EAAyB,CAC7BC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGDC,EAAQC,YAAe,CAClCC,QAAS,CACPnE,SAAUoE,YAAeP,EAAwBZ,IAEnDE,aACAkB,UAAUC,IAGCC,EAAYC,YAAaP,G,YC7BtCQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOW,EAAjB,SACE,cAAC,IAAD,CAAaC,QAAS,KAAMN,UAAWK,EAAvC,SACE,cAAC,EAAD,UAINE,SAASC,eAAe,W","file":"static/js/main.474fdfdb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2FENw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Contacts_form__3Qwwp\",\"label\":\"Contacts_label__3V73k\",\"input\":\"Contacts_input__1oW-_\",\"button\":\"Contacts_button__17UHy\",\"item\":\"Contacts_item__37iVR\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","//Без синтаксического сахора (без toolkit)\r\n\r\n/*import shortId from 'shortid';\r\nimport * as types from './phonebook-types';\r\n\r\nexport const addNewContact = (name, number) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    id: shortId.generate(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nexport const deleteContact = contactId => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nexport const changeFilter = value => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: value,\r\n});*/\r\n\r\n//=============================================================\r\n\r\nimport shortId from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addNewContact = createAction('phonebook/Add', (name, number) => ({\r\n  payload: {\r\n    id: shortId.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction('phonebook/Delete');\r\n\r\nexport const changeFilter = createAction('phonebook/ChangeFilter');\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\nimport * as phonebookActions from '../../redux/phonebook/phonebook-actions';\r\n\r\nconst getVisiblePhonbookList = (filter, items) => {\r\n  const normolizedFilter = filter.toLowerCase();\r\n\r\n  return items.filter(item =>\r\n    item.name.toLowerCase().includes(normolizedFilter),\r\n  );\r\n};\r\n\r\nfunction ContactList() {\r\n  const { item } = s;\r\n\r\n  const contacts = useSelector(state =>\r\n    getVisiblePhonbookList(state.contacts.filter, state.contacts.items),\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(phonebookActions.deleteContact(id));\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={item} key={id}>\r\n          <span>\r\n            {name}: {number}\r\n          </span>\r\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\nimport * as phonebookActions from '../../redux/phonebook/phonebook-actions';\r\n\r\nfunction ContactForm(props) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(state => state.contacts.items);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const addSameName = contacts.map(({ name }) => name).includes(name);\r\n    const addSameNumber = contacts.map(({ number }) => number).includes(number);\r\n\r\n    if (addSameName) {\r\n      toast.error(`${name} is already in contacts`);\r\n    } else if (addSameNumber) {\r\n      toast.error(`${number} is already in contacts`);\r\n    } else {\r\n      dispatch(phonebookActions.addNewContact(name, number));\r\n    }\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const { label, input, form, button } = s;\r\n  const buttonActive = name.length > 0 && number.length > 0;\r\n\r\n  return (\r\n    <form className={form} onSubmit={handleSubmit}>\r\n      <label className={label}>\r\n        Name\r\n        <input\r\n          className={input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n          placeholder=\" \"\r\n        />\r\n      </label>\r\n      <label className={label}>\r\n        Number\r\n        <input\r\n          className={input}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n          placeholder=\" \"\r\n        />\r\n      </label>\r\n      <button className={button} type=\"submit\" disabled={!buttonActive}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\nimport * as phonebookActions from '../../redux/phonebook/phonebook-actions';\r\n\r\nfunction Filter() {\r\n  const { label, input } = s;\r\n\r\n  const value = useSelector(state => state.contacts.filter);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeFilter = e =>\r\n    dispatch(phonebookActions.changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={label}>\r\n      Filter contacts by name\r\n      <input\r\n        className={input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n        placeholder=\" \"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onchangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Container from './container/Container';\r\nimport ContactList from './phonebook/ContactList';\r\nimport ContactForm from './phonebook/ContactForm';\r\nimport Filter from './phonebook/Filter';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n\r\n      <ToastContainer autoClose={3000} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","//Без синтаксического сахора (без toolkit)\r\n\r\n/*import { combineReducers } from 'redux';\r\nimport * as types from './phonebook-types';\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n\r\n    case types.DELETE:\r\n      return state.filter(contact => contact.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst phonebookReduser = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default phonebookReduser;*/\r\n\r\n//=============================================================\r\n\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as phonebookActions from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [phonebookActions.addNewContact]: (state, { payload }) => [...state, payload],\r\n  [phonebookActions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [phonebookActions.changeFilter]: (_, { payload }) => payload,\r\n}); //Если не используем state то можно вместо него поставить _ подчеркивание.\r\n\r\nconst phonebookReduser = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default phonebookReduser;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n//import logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport phonebookReduser from './phonebook/phonebook-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  //logger,\r\n];\r\nconst phonebookPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(phonebookPersistConfig, phonebookReduser),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './components/App';\r\nimport * as mainStore from './redux/srore';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={mainStore.store}>\r\n      <PersistGate loading={null} persistor={mainStore.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}